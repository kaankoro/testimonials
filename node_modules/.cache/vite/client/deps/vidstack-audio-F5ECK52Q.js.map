{
  "version": 3,
  "sources": ["../../../../vidstack/dev/providers/vidstack-audio.js"],
  "sourcesContent": ["import { e as scoped } from '../chunks/vidstack-CPyWhQNM.js';\nimport { HTMLMediaProvider } from './vidstack-html.js';\nimport { H as HTMLAirPlayAdapter } from '../chunks/vidstack-YtBO8bQN.js';\nimport '../chunks/vidstack-Ckf8G9lg.js';\nimport '../chunks/vidstack-Dof10RKL.js';\nimport '../chunks/vidstack-ksPACRiU.js';\nimport '../chunks/vidstack-CnaYRoc3.js';\n\nclass AudioProvider extends HTMLMediaProvider {\n  constructor(audio, ctx) {\n    super(audio, ctx);\n    this.$$PROVIDER_TYPE = \"AUDIO\";\n    scoped(() => {\n      this.airPlay = new HTMLAirPlayAdapter(this.media, ctx);\n    }, this.scope);\n  }\n  get type() {\n    return \"audio\";\n  }\n  setup() {\n    super.setup();\n    if (this.type === \"audio\")\n      this._ctx.delegate._notify(\"provider-setup\", this);\n  }\n  /**\n   * The native HTML `<audio>` element.\n   *\n   * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLAudioElement}\n   */\n  get audio() {\n    return this._media;\n  }\n}\n\nexport { AudioProvider };\n"],
  "mappings": ";;;;;;;;;;;;;;AAQA,IAAM,gBAAN,cAA4B,kBAAkB;AAAA,EAC5C,YAAY,OAAO,KAAK;AACtB,UAAM,OAAO,GAAG;AAChB,SAAK,kBAAkB;AACvB,WAAO,MAAM;AACX,WAAK,UAAU,IAAI,mBAAmB,KAAK,OAAO,GAAG;AAAA,IACvD,GAAG,KAAK,KAAK;AAAA,EACf;AAAA,EACA,IAAI,OAAO;AACT,WAAO;AAAA,EACT;AAAA,EACA,QAAQ;AACN,UAAM,MAAM;AACZ,QAAI,KAAK,SAAS;AAChB,WAAK,KAAK,SAAS,QAAQ,kBAAkB,IAAI;AAAA,EACrD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,IAAI,QAAQ;AACV,WAAO,KAAK;AAAA,EACd;AACF;",
  "names": []
}

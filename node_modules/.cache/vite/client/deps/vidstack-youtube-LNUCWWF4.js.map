{
  "version": 3,
  "sources": ["../../../../vidstack/dev/providers/vidstack-youtube.js"],
  "sourcesContent": ["import { t as createScope, f as signal, g as effect, i as isString, v as isObject, j as isNumber, b as isBoolean } from '../chunks/vidstack-CPyWhQNM.js';\nimport '../chunks/vidstack-BoQ9v9ck.js';\nimport { T as TimeRange } from '../chunks/vidstack-CCzOi1rX.js';\nimport '../chunks/vidstack-Bnoxq110.js';\nimport { p as preconnect } from '../chunks/vidstack-CwOXU-tS.js';\nimport { E as EmbedProvider, t as timedPromise } from '../chunks/vidstack-C9oRIXv0.js';\nimport { resolveYouTubeVideoId } from '../chunks/vidstack-DscYSLiW.js';\nimport '../chunks/vidstack-CnaYRoc3.js';\nimport '../chunks/vidstack-Ckf8G9lg.js';\n\nconst YouTubePlayerState = {\n  _Unstarted: -1,\n  _Ended: 0,\n  _Playing: 1,\n  _Paused: 2,\n  _Buffering: 3,\n  _Cued: 5\n};\n\nclass YouTubeProvider extends EmbedProvider {\n  constructor(iframe, _ctx) {\n    super(iframe);\n    this._ctx = _ctx;\n    this.$$PROVIDER_TYPE = \"YOUTUBE\";\n    this.scope = createScope();\n    this._videoId = signal(\"\");\n    this._state = -1;\n    this._seekingTimer = -1;\n    this._pausedSeeking = false;\n    this._played = 0;\n    this._playedRange = new TimeRange(0, 0);\n    this._currentSrc = null;\n    this._playPromise = null;\n    this._pausePromise = null;\n    /**\n     * Sets the player's interface language. The parameter value is an ISO 639-1 two-letter\n     * language code or a fully specified locale. For example, fr and fr-ca are both valid values.\n     * Other language input codes, such as IETF language tags (BCP 47) might also be handled properly.\n     *\n     * The interface language is used for tooltips in the player and also affects the default caption\n     * track. Note that YouTube might select a different caption track language for a particular\n     * user based on the user's individual language preferences and the availability of caption tracks.\n     *\n     * @defaultValue 'en'\n     */\n    this.language = \"en\";\n    this.color = \"red\";\n    /**\n     * Whether cookies should be enabled on the embed. This is turned off by default to be\n     * GDPR-compliant.\n     *\n     * @defaultValue `false`\n     */\n    this.cookies = false;\n  }\n  get _notify() {\n    return this._ctx.delegate._notify;\n  }\n  get currentSrc() {\n    return this._currentSrc;\n  }\n  get type() {\n    return \"youtube\";\n  }\n  get videoId() {\n    return this._videoId();\n  }\n  preconnect() {\n    preconnect(this._getOrigin());\n  }\n  setup() {\n    super.setup();\n    effect(this._watchVideoId.bind(this));\n    this._notify(\"provider-setup\", this);\n  }\n  async play() {\n    const { paused } = this._ctx.$state;\n    if (!this._playPromise) {\n      this._playPromise = timedPromise(() => {\n        this._playPromise = null;\n        if (paused())\n          return \"Timed out.\";\n      });\n      this._remote(\"playVideo\");\n    }\n    return this._playPromise.promise;\n  }\n  async pause() {\n    const { paused } = this._ctx.$state;\n    if (!this._pausePromise) {\n      this._pausePromise = timedPromise(() => {\n        this._pausePromise = null;\n        if (!paused())\n          ;\n      });\n      this._remote(\"pauseVideo\");\n    }\n    return this._pausePromise.promise;\n  }\n  setMuted(muted) {\n    if (muted)\n      this._remote(\"mute\");\n    else\n      this._remote(\"unMute\");\n  }\n  setCurrentTime(time) {\n    this._pausedSeeking = this._ctx.$state.paused();\n    this._remote(\"seekTo\", time);\n    this._notify(\"seeking\", time);\n  }\n  setVolume(volume) {\n    this._remote(\"setVolume\", volume * 100);\n  }\n  setPlaybackRate(rate) {\n    this._remote(\"setPlaybackRate\", rate);\n  }\n  async loadSource(src) {\n    if (!isString(src.src)) {\n      this._currentSrc = null;\n      this._videoId.set(\"\");\n      return;\n    }\n    const videoId = resolveYouTubeVideoId(src.src);\n    this._videoId.set(videoId ?? \"\");\n    this._currentSrc = src;\n  }\n  _getOrigin() {\n    return !this.cookies ? \"https://www.youtube-nocookie.com\" : \"https://www.youtube.com\";\n  }\n  _watchVideoId() {\n    this._reset();\n    const videoId = this._videoId();\n    if (!videoId) {\n      this._src.set(\"\");\n      return;\n    }\n    this._src.set(`${this._getOrigin()}/embed/${videoId}`);\n    this._notify(\"load-start\");\n  }\n  _buildParams() {\n    const { keyDisabled } = this._ctx.$props, { muted, playsInline, nativeControls } = this._ctx.$state, showControls = nativeControls();\n    return {\n      autoplay: 0,\n      cc_lang_pref: this.language,\n      cc_load_policy: showControls ? 1 : void 0,\n      color: this.color,\n      controls: showControls ? 1 : 0,\n      disablekb: !showControls || keyDisabled() ? 1 : 0,\n      enablejsapi: 1,\n      fs: 1,\n      hl: this.language,\n      iv_load_policy: showControls ? 1 : 3,\n      mute: muted() ? 1 : 0,\n      playsinline: playsInline() ? 1 : 0\n    };\n  }\n  _remote(command, arg) {\n    this._postMessage({\n      event: \"command\",\n      func: command,\n      args: arg ? [arg] : void 0\n    });\n  }\n  _onLoad() {\n    window.setTimeout(() => this._postMessage({ event: \"listening\" }), 100);\n  }\n  _onReady(trigger) {\n    this._notify(\"loaded-metadata\");\n    this._notify(\"loaded-data\");\n    this._ctx.delegate._ready(void 0, trigger);\n  }\n  _onPause(trigger) {\n    this._pausePromise?.resolve();\n    this._pausePromise = null;\n    this._notify(\"pause\", void 0, trigger);\n  }\n  _onTimeUpdate(time, trigger) {\n    const { duration, realCurrentTime } = this._ctx.$state, hasEnded = this._state === YouTubePlayerState._Ended, boundTime = hasEnded ? duration() : time, detail = {\n      currentTime: boundTime,\n      played: this._getPlayedRange(boundTime)\n    };\n    this._notify(\"time-update\", detail, trigger);\n    if (!hasEnded && Math.abs(boundTime - realCurrentTime()) > 1) {\n      this._notify(\"seeking\", boundTime, trigger);\n    }\n  }\n  _getPlayedRange(time) {\n    return this._played >= time ? this._playedRange : this._playedRange = new TimeRange(0, this._played = time);\n  }\n  _onProgress(buffered, seekable, trigger) {\n    const detail = {\n      buffered: new TimeRange(0, buffered),\n      seekable\n    };\n    this._notify(\"progress\", detail, trigger);\n    const { seeking, realCurrentTime } = this._ctx.$state;\n    if (seeking() && buffered > realCurrentTime()) {\n      this._onSeeked(trigger);\n    }\n  }\n  _onSeeked(trigger) {\n    const { paused, realCurrentTime } = this._ctx.$state;\n    window.clearTimeout(this._seekingTimer);\n    this._seekingTimer = window.setTimeout(\n      () => {\n        this._notify(\"seeked\", realCurrentTime(), trigger);\n        this._seekingTimer = -1;\n      },\n      paused() ? 100 : 0\n    );\n    this._pausedSeeking = false;\n  }\n  _onEnded(trigger) {\n    const { seeking } = this._ctx.$state;\n    if (seeking())\n      this._onSeeked(trigger);\n    this._notify(\"pause\", void 0, trigger);\n    this._notify(\"end\", void 0, trigger);\n  }\n  _onStateChange(state, trigger) {\n    const { started, paused, seeking } = this._ctx.$state, isPlaying = state === YouTubePlayerState._Playing, isBuffering = state === YouTubePlayerState._Buffering, isPlay = (paused() || this._playPromise) && (isBuffering || isPlaying);\n    if (isBuffering)\n      this._notify(\"waiting\", void 0, trigger);\n    if (seeking() && isPlaying) {\n      this._onSeeked(trigger);\n    }\n    if (!started() && isPlay && this._pausedSeeking) {\n      this._playPromise?.reject(\"invalid internal play operation\");\n      this._playPromise = null;\n      if (isPlaying) {\n        this.pause();\n        this._pausedSeeking = false;\n      }\n      return;\n    }\n    if (isPlay) {\n      this._playPromise?.resolve();\n      this._playPromise = null;\n      this._notify(\"play\", void 0, trigger);\n    }\n    switch (state) {\n      case YouTubePlayerState._Cued:\n        this._onReady(trigger);\n        break;\n      case YouTubePlayerState._Playing:\n        this._notify(\"playing\", void 0, trigger);\n        break;\n      case YouTubePlayerState._Paused:\n        this._onPause(trigger);\n        break;\n      case YouTubePlayerState._Ended:\n        this._onEnded(trigger);\n        break;\n    }\n    this._state = state;\n  }\n  _onMessage({ info }, event) {\n    if (!info)\n      return;\n    const { title, intrinsicDuration, playbackRate } = this._ctx.$state;\n    if (isObject(info.videoData) && info.videoData.title !== title()) {\n      this._notify(\"title-change\", info.videoData.title, event);\n    }\n    if (isNumber(info.duration) && info.duration !== intrinsicDuration()) {\n      if (isNumber(info.videoLoadedFraction)) {\n        const buffered = info.progressState?.loaded ?? info.videoLoadedFraction * info.duration, seekable = new TimeRange(0, info.duration);\n        this._onProgress(buffered, seekable, event);\n      }\n      this._notify(\"duration-change\", info.duration, event);\n    }\n    if (isNumber(info.playbackRate) && info.playbackRate !== playbackRate()) {\n      this._notify(\"rate-change\", info.playbackRate, event);\n    }\n    if (info.progressState) {\n      const {\n        current,\n        seekableStart,\n        seekableEnd,\n        loaded,\n        duration: _duration\n      } = info.progressState;\n      this._onTimeUpdate(current, event);\n      this._onProgress(loaded, new TimeRange(seekableStart, seekableEnd), event);\n      if (_duration !== intrinsicDuration()) {\n        this._notify(\"duration-change\", _duration, event);\n      }\n    }\n    if (isNumber(info.volume) && isBoolean(info.muted)) {\n      const detail = {\n        muted: info.muted,\n        volume: info.volume / 100\n      };\n      this._notify(\"volume-change\", detail, event);\n    }\n    if (isNumber(info.playerState) && info.playerState !== this._state) {\n      this._onStateChange(info.playerState, event);\n    }\n  }\n  _reset() {\n    this._state = -1;\n    this._seekingTimer = -1;\n    this._played = 0;\n    this._playedRange = new TimeRange(0, 0);\n    this._playPromise = null;\n    this._pausePromise = null;\n    this._pausedSeeking = false;\n  }\n}\n\nexport { YouTubeProvider };\n"],
  "mappings": "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",
  "names": []
}

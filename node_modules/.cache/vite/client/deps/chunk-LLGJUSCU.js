import {
  appendParamsToURL
} from "./chunk-DRJCPP74.js";
import {
  deferredPromise,
  effect,
  isString,
  listenEvent,
  peek,
  signal
} from "./chunk-2H3ESF2I.js";

// node_modules/vidstack/dev/chunks/vidstack-C9oRIXv0.js
function timedPromise(callback, ms = 3e3) {
  const promise = deferredPromise();
  setTimeout(() => {
    const rejection = callback();
    if (rejection)
      promise.reject(rejection);
  }, ms);
  return promise;
}
var EmbedProvider = class {
  constructor(_iframe) {
    this._iframe = _iframe;
    this._src = signal("");
    this.referrerPolicy = null;
    _iframe.setAttribute("frameBorder", "0");
    _iframe.setAttribute("aria-hidden", "true");
    _iframe.setAttribute(
      "allow",
      "autoplay; fullscreen; encrypted-media; picture-in-picture; accelerometer; gyroscope"
    );
    if (this.referrerPolicy !== null) {
      _iframe.setAttribute("referrerpolicy", this.referrerPolicy);
    }
  }
  get iframe() {
    return this._iframe;
  }
  setup() {
    listenEvent(window, "message", this._onWindowMessage.bind(this));
    listenEvent(this._iframe, "load", this._onLoad.bind(this));
    effect(this._watchSrc.bind(this));
  }
  _watchSrc() {
    const src = this._src();
    if (!src.length) {
      this._iframe.setAttribute("src", "");
      return;
    }
    const params = peek(() => this._buildParams());
    this._iframe.setAttribute("src", appendParamsToURL(src, params));
  }
  _postMessage(message, target) {
    var _a;
    (_a = this._iframe.contentWindow) == null ? void 0 : _a.postMessage(JSON.stringify(message), target ?? "*");
  }
  _onWindowMessage(event) {
    var _a;
    const origin = this._getOrigin(), isOriginMatch = (event.source === null || event.source === ((_a = this._iframe) == null ? void 0 : _a.contentWindow)) && (!isString(origin) || origin === event.origin);
    if (!isOriginMatch)
      return;
    try {
      const message = JSON.parse(event.data);
      if (message)
        this._onMessage(message, event);
      return;
    } catch (e) {
    }
    if (event.data)
      this._onMessage(event.data, event);
  }
};

export {
  timedPromise,
  EmbedProvider
};
//# sourceMappingURL=chunk-LLGJUSCU.js.map

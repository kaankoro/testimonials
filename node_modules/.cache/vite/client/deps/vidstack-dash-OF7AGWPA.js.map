{
  "version": 3,
  "sources": ["../../../../vidstack/dev/providers/vidstack-dash.js"],
  "sourcesContent": ["import { l as loadScript, p as preconnect } from '../chunks/vidstack-CwOXU-tS.js';\nimport { c as canPlayVideoType, t as canPlayAudioType, I as IS_CHROME, u as isDASHSupported } from '../chunks/vidstack-Ckf8G9lg.js';\nimport { VideoProvider } from './vidstack-video.js';\nimport { l as listenEvent, g as effect, D as DOMEvent, j as isNumber, p as peek, i as isString, y as camelToKebabCase, h as isUndefined, A as isFunction } from '../chunks/vidstack-CPyWhQNM.js';\nimport { Q as QualitySymbol } from '../chunks/vidstack-1gmLGa6x.js';\nimport { a as TextTrackSymbol, T as TextTrack } from '../chunks/vidstack-Bnoxq110.js';\nimport { L as ListSymbol } from '../chunks/vidstack-CnaYRoc3.js';\nimport { R as RAFLoop } from '../chunks/vidstack-Dof10RKL.js';\nimport { c as coerceToError } from '../chunks/vidstack-DM_McBs5.js';\nimport './vidstack-html.js';\nimport '../chunks/vidstack-ksPACRiU.js';\nimport '../chunks/vidstack-YtBO8bQN.js';\n\nfunction getLangName(langCode) {\n  try {\n    const displayNames = new Intl.DisplayNames(navigator.languages, { type: \"language\" });\n    const languageName = displayNames.of(langCode);\n    return languageName ?? null;\n  } catch (err) {\n    return null;\n  }\n}\n\nconst toDOMEventType = (type) => `dash-${camelToKebabCase(type)}`;\nclass DASHController {\n  constructor(_video, _ctx) {\n    this._video = _video;\n    this._ctx = _ctx;\n    this._instance = null;\n    this._stopLiveSync = null;\n    this._config = {};\n    this._callbacks = /* @__PURE__ */ new Set();\n    this._currentTrack = null;\n    this._cueTracker = {};\n    this._retryLoadingTimer = -1;\n  }\n  get instance() {\n    return this._instance;\n  }\n  setup(ctor) {\n    this._instance = ctor().create();\n    const dispatcher = this._dispatchDASHEvent.bind(this);\n    for (const event of Object.values(ctor.events))\n      this._instance.on(event, dispatcher);\n    this._instance.on(ctor.events.ERROR, this._onError.bind(this));\n    for (const callback of this._callbacks)\n      callback(this._instance);\n    this._ctx.player.dispatch(\"dash-instance\", {\n      detail: this._instance\n    });\n    this._instance.initialize(this._video, void 0, false);\n    this._instance.updateSettings({\n      streaming: {\n        text: {\n          // Disabling text rendering by dash.\n          defaultEnabled: false,\n          dispatchForManualRendering: true\n        },\n        buffer: {\n          /// Enables buffer replacement when switching bitrates for faster switching.\n          fastSwitchEnabled: true\n        }\n      },\n      ...this._config\n    });\n    this._instance.on(ctor.events.FRAGMENT_LOADING_STARTED, this._onFragmentLoadStart.bind(this));\n    this._instance.on(\n      ctor.events.FRAGMENT_LOADING_COMPLETED,\n      this._onFragmentLoadComplete.bind(this)\n    );\n    this._instance.on(ctor.events.MANIFEST_LOADED, this._onManifestLoaded.bind(this));\n    this._instance.on(ctor.events.QUALITY_CHANGE_RENDERED, this._onQualityChange.bind(this));\n    this._instance.on(ctor.events.TEXT_TRACKS_ADDED, this._onTextTracksAdded.bind(this));\n    this._instance.on(ctor.events.TRACK_CHANGE_RENDERED, this._onTrackChange.bind(this));\n    this._ctx.qualities[QualitySymbol._enableAuto] = this._enableAutoQuality.bind(this);\n    listenEvent(this._ctx.qualities, \"change\", this._onUserQualityChange.bind(this));\n    listenEvent(this._ctx.audioTracks, \"change\", this._onUserAudioChange.bind(this));\n    this._stopLiveSync = effect(this._liveSync.bind(this));\n  }\n  _createDOMEvent(event) {\n    return new DOMEvent(toDOMEventType(event.type), { detail: event });\n  }\n  _liveSync() {\n    if (!this._ctx.$state.live())\n      return;\n    const raf = new RAFLoop(this._liveSyncPosition.bind(this));\n    raf._start();\n    return raf._stop.bind(raf);\n  }\n  _liveSyncPosition() {\n    if (!this._instance)\n      return;\n    const position = this._instance.duration() - this._instance.time();\n    this._ctx.$state.liveSyncPosition.set(!isNaN(position) ? position : Infinity);\n  }\n  _dispatchDASHEvent(event) {\n    this._ctx.player?.dispatch(this._createDOMEvent(event));\n  }\n  _onTextFragmentLoaded(event) {\n    const native = this._currentTrack?.[TextTrackSymbol._native], cues = (native?.track).cues;\n    if (!native || !cues)\n      return;\n    const id = this._currentTrack.id, startIndex = this._cueTracker[id] ?? 0, trigger = this._createDOMEvent(event);\n    for (let i = startIndex; i < cues.length; i++) {\n      const cue = cues[i];\n      if (!cue.positionAlign)\n        cue.positionAlign = \"auto\";\n      this._currentTrack.addCue(cue, trigger);\n    }\n    this._cueTracker[id] = cues.length;\n  }\n  _onTextTracksAdded(event) {\n    if (!this._instance)\n      return;\n    const data = event.tracks, nativeTextTracks = [...this._video.textTracks].filter((track) => \"manualMode\" in track), trigger = this._createDOMEvent(event);\n    for (let i = 0; i < nativeTextTracks.length; i++) {\n      const textTrackInfo = data[i], nativeTextTrack = nativeTextTracks[i];\n      const id = `dash-${textTrackInfo.kind}-${i}`, track = new TextTrack({\n        id,\n        label: textTrackInfo?.label ?? textTrackInfo.labels.find((t) => t.text)?.text ?? (textTrackInfo?.lang && getLangName(textTrackInfo.lang)) ?? textTrackInfo?.lang ?? void 0,\n        language: textTrackInfo.lang ?? void 0,\n        kind: textTrackInfo.kind,\n        default: textTrackInfo.defaultTrack\n      });\n      track[TextTrackSymbol._native] = {\n        managed: true,\n        track: nativeTextTrack\n      };\n      track[TextTrackSymbol._readyState] = 2;\n      track[TextTrackSymbol._onModeChange] = () => {\n        if (!this._instance)\n          return;\n        if (track.mode === \"showing\") {\n          this._instance.setTextTrack(i);\n          this._currentTrack = track;\n        } else {\n          this._instance.setTextTrack(-1);\n          this._currentTrack = null;\n        }\n      };\n      this._ctx.textTracks.add(track, trigger);\n    }\n  }\n  _onTrackChange(event) {\n    const { mediaType, newMediaInfo } = event;\n    if (mediaType === \"audio\") {\n      const track = this._ctx.audioTracks.getById(`dash-audio-${newMediaInfo.index}`);\n      if (track) {\n        const trigger = this._createDOMEvent(event);\n        this._ctx.audioTracks[ListSymbol._select](track, true, trigger);\n      }\n    }\n  }\n  _onQualityChange(event) {\n    if (event.mediaType !== \"video\")\n      return;\n    const quality = this._ctx.qualities[event.newQuality];\n    if (quality) {\n      const trigger = this._createDOMEvent(event);\n      this._ctx.qualities[ListSymbol._select](quality, true, trigger);\n    }\n  }\n  _onManifestLoaded(event) {\n    if (this._ctx.$state.canPlay() || !this._instance)\n      return;\n    const { type, mediaPresentationDuration } = event.data, trigger = this._createDOMEvent(event);\n    this._ctx.delegate._notify(\n      \"stream-type-change\",\n      type !== \"static\" ? \"live\" : \"on-demand\",\n      trigger\n    );\n    this._ctx.delegate._notify(\"duration-change\", mediaPresentationDuration, trigger);\n    this._ctx.qualities[QualitySymbol._setAuto](true, trigger);\n    const media = this._instance.getVideoElement();\n    const videoQualities = this._instance.getTracksForTypeFromManifest(\n      \"video\",\n      event.data\n    );\n    const supportedVideoMimeType = [...new Set(videoQualities.map((e) => e.mimeType))].find(\n      (type2) => type2 && canPlayVideoType(media, type2)\n    );\n    const videoQuality = videoQualities.filter(\n      (track) => supportedVideoMimeType === track.mimeType\n    )[0];\n    let audioTracks = this._instance.getTracksForTypeFromManifest(\n      \"audio\",\n      event.data\n    );\n    const supportedAudioMimeType = [...new Set(audioTracks.map((e) => e.mimeType))].find(\n      (type2) => type2 && canPlayAudioType(media, type2)\n    );\n    audioTracks = audioTracks.filter((track) => supportedAudioMimeType === track.mimeType);\n    videoQuality.bitrateList.forEach((bitrate, index) => {\n      const quality = {\n        id: bitrate.id?.toString() ?? `dash-bitrate-${index}`,\n        width: bitrate.width ?? 0,\n        height: bitrate.height ?? 0,\n        bitrate: bitrate.bandwidth ?? 0,\n        codec: videoQuality.codec,\n        index\n      };\n      this._ctx.qualities[ListSymbol._add](quality, trigger);\n    });\n    if (isNumber(videoQuality.index)) {\n      const quality = this._ctx.qualities[videoQuality.index];\n      if (quality)\n        this._ctx.qualities[ListSymbol._select](quality, true, trigger);\n    }\n    audioTracks.forEach((audioTrack, index) => {\n      const matchingLabel = audioTrack.labels.find((label2) => {\n        return navigator.languages.some((language) => {\n          return label2.lang && language.toLowerCase().startsWith(label2.lang.toLowerCase());\n        });\n      });\n      const label = matchingLabel || audioTrack.labels[0];\n      const localTrack = {\n        id: `dash-audio-${audioTrack?.index}`,\n        label: label?.text ?? (audioTrack.lang && getLangName(audioTrack.lang)) ?? audioTrack.lang ?? \"\",\n        language: audioTrack.lang ?? \"\",\n        kind: \"main\",\n        mimeType: audioTrack.mimeType,\n        codec: audioTrack.codec,\n        index\n      };\n      this._ctx.audioTracks[ListSymbol._add](localTrack, trigger);\n    });\n    media.dispatchEvent(new DOMEvent(\"canplay\", { trigger }));\n  }\n  _onError(event) {\n    const { type: eventType, error: data } = event;\n    {\n      this._ctx.logger?.errorGroup(`[vidstack] DASH error \\`${data.message}\\``).labelledLog(\"Media Element\", this._video).labelledLog(\"DASH Instance\", this._instance).labelledLog(\"Event Type\", eventType).labelledLog(\"Data\", data).labelledLog(\"Src\", peek(this._ctx.$state.source)).labelledLog(\"Media Store\", { ...this._ctx.$state }).dispatch();\n    }\n    switch (data.code) {\n      case 27:\n        this._onNetworkError(data);\n        break;\n      default:\n        this._onFatalError(data);\n        break;\n    }\n  }\n  _onFragmentLoadStart() {\n    if (this._retryLoadingTimer >= 0)\n      this._clearRetryTimer();\n  }\n  _onFragmentLoadComplete(event) {\n    const mediaType = event.mediaType;\n    if (mediaType === \"text\") {\n      requestAnimationFrame(this._onTextFragmentLoaded.bind(this, event));\n    }\n  }\n  _onNetworkError(error) {\n    this._clearRetryTimer();\n    this._instance?.play();\n    this._retryLoadingTimer = window.setTimeout(() => {\n      this._retryLoadingTimer = -1;\n      this._onFatalError(error);\n    }, 5e3);\n  }\n  _clearRetryTimer() {\n    clearTimeout(this._retryLoadingTimer);\n    this._retryLoadingTimer = -1;\n  }\n  _onFatalError(error) {\n    this._ctx.delegate._notify(\"error\", {\n      message: error.message ?? \"\",\n      code: 1,\n      error\n    });\n  }\n  _enableAutoQuality() {\n    this._switchAutoBitrate(\"video\", true);\n    const { qualities } = this._ctx;\n    this._instance?.setQualityFor(\"video\", qualities.selectedIndex, true);\n  }\n  _switchAutoBitrate(type, auto) {\n    this._instance?.updateSettings({\n      streaming: { abr: { autoSwitchBitrate: { [type]: auto } } }\n    });\n  }\n  _onUserQualityChange() {\n    const { qualities } = this._ctx;\n    if (!this._instance || qualities.auto || !qualities.selected)\n      return;\n    this._switchAutoBitrate(\"video\", false);\n    this._instance.setQualityFor(\"video\", qualities.selectedIndex, qualities.switch === \"current\");\n    if (IS_CHROME) {\n      this._video.currentTime = this._video.currentTime;\n    }\n  }\n  _onUserAudioChange() {\n    if (!this._instance)\n      return;\n    const { audioTracks } = this._ctx, selectedTrack = this._instance.getTracksFor(\"audio\").find(\n      (track) => audioTracks.selected && audioTracks.selected.id === `dash-audio-${track.index}`\n    );\n    if (selectedTrack)\n      this._instance.setCurrentTrack(selectedTrack);\n  }\n  _reset() {\n    this._clearRetryTimer();\n    this._currentTrack = null;\n    this._cueTracker = {};\n  }\n  loadSource(src) {\n    this._reset();\n    if (!isString(src.src))\n      return;\n    this._instance?.attachSource(src.src);\n  }\n  destroy() {\n    this._reset();\n    this._instance?.destroy();\n    this._instance = null;\n    this._stopLiveSync?.();\n    this._stopLiveSync = null;\n    this._ctx?.logger?.info(\"\\u{1F3D7}\\uFE0F Destroyed DASH instance\");\n  }\n}\n\nclass DASHLibLoader {\n  constructor(_lib, _ctx, _callback) {\n    this._lib = _lib;\n    this._ctx = _ctx;\n    this._callback = _callback;\n    this._startLoading();\n  }\n  async _startLoading() {\n    this._ctx.logger?.info(\"\\u{1F3D7}\\uFE0F Loading DASH Library\");\n    const callbacks = {\n      onLoadStart: this._onLoadStart.bind(this),\n      onLoaded: this._onLoaded.bind(this),\n      onLoadError: this._onLoadError.bind(this)\n    };\n    let ctor = await loadDASHScript(this._lib, callbacks);\n    if (isUndefined(ctor) && !isString(this._lib))\n      ctor = await importDASH(this._lib, callbacks);\n    if (!ctor)\n      return null;\n    if (!window.dashjs.supportsMediaSource()) {\n      const message = \"[vidstack] `dash.js` is not supported in this environment\";\n      this._ctx.logger?.error(message);\n      this._ctx.player.dispatch(new DOMEvent(\"dash-unsupported\"));\n      this._ctx.delegate._notify(\"error\", { message, code: 4 });\n      return null;\n    }\n    return ctor;\n  }\n  _onLoadStart() {\n    {\n      this._ctx.logger?.infoGroup(\"Starting to load `dash.js`\").labelledLog(\"URL\", this._lib).dispatch();\n    }\n    this._ctx.player.dispatch(new DOMEvent(\"dash-lib-load-start\"));\n  }\n  _onLoaded(ctor) {\n    {\n      this._ctx.logger?.infoGroup(\"Loaded `dash.js`\").labelledLog(\"Library\", this._lib).labelledLog(\"Constructor\", ctor).dispatch();\n    }\n    this._ctx.player.dispatch(\n      new DOMEvent(\"dash-lib-loaded\", {\n        detail: ctor\n      })\n    );\n    this._callback(ctor);\n  }\n  _onLoadError(e) {\n    const error = coerceToError(e);\n    {\n      this._ctx.logger?.errorGroup(\"[vidstack] Failed to load `dash.js`\").labelledLog(\"Library\", this._lib).labelledLog(\"Error\", e).dispatch();\n    }\n    this._ctx.player.dispatch(\n      new DOMEvent(\"dash-lib-load-error\", {\n        detail: error\n      })\n    );\n    this._ctx.delegate._notify(\"error\", {\n      message: error.message,\n      code: 4,\n      error\n    });\n  }\n}\nasync function importDASH(loader, callbacks = {}) {\n  if (isUndefined(loader))\n    return void 0;\n  callbacks.onLoadStart?.();\n  if (isDASHConstructor(loader)) {\n    callbacks.onLoaded?.(loader);\n    return loader;\n  }\n  if (isDASHNamespace(loader)) {\n    const ctor = loader.MediaPlayer;\n    callbacks.onLoaded?.(ctor);\n    return ctor;\n  }\n  try {\n    const ctor = (await loader())?.default;\n    if (isDASHNamespace(ctor)) {\n      callbacks.onLoaded?.(ctor.MediaPlayer);\n      return ctor.MediaPlayer;\n    }\n    if (ctor) {\n      callbacks.onLoaded?.(ctor);\n    } else {\n      throw Error(\n        true ? \"[vidstack] failed importing `dash.js`. Dynamic import returned invalid object.\" : \"\"\n      );\n    }\n    return ctor;\n  } catch (err) {\n    callbacks.onLoadError?.(err);\n  }\n  return void 0;\n}\nasync function loadDASHScript(src, callbacks = {}) {\n  if (!isString(src))\n    return void 0;\n  callbacks.onLoadStart?.();\n  try {\n    await loadScript(src);\n    if (!isFunction(window.dashjs.MediaPlayer)) {\n      throw Error(\n        true ? \"[vidstack] failed loading `dash.js`. Could not find a valid `Dash` constructor on window\" : \"\"\n      );\n    }\n    const ctor = window.dashjs.MediaPlayer;\n    callbacks.onLoaded?.(ctor);\n    return ctor;\n  } catch (err) {\n    callbacks.onLoadError?.(err);\n  }\n  return void 0;\n}\nfunction isDASHConstructor(value) {\n  return value && value.prototype && value.prototype !== Function;\n}\nfunction isDASHNamespace(value) {\n  return value && \"MediaPlayer\" in value;\n}\n\nconst JS_DELIVR_CDN = \"https://cdn.jsdelivr.net\";\nclass DASHProvider extends VideoProvider {\n  constructor() {\n    super(...arguments);\n    this.$$PROVIDER_TYPE = \"DASH\";\n    this._ctor = null;\n    this._controller = new DASHController(this.video, this._ctx);\n    this._library = `${JS_DELIVR_CDN}/npm/dashjs@4.7.4/dist/dash${\".all.debug.js\" }`;\n  }\n  /**\n   * The `dash.js` constructor.\n   */\n  get ctor() {\n    return this._ctor;\n  }\n  /**\n   * The current `dash.js` instance.\n   */\n  get instance() {\n    return this._controller.instance;\n  }\n  static {\n    /**\n     * Whether `dash.js` is supported in this environment.\n     */\n    this.supported = isDASHSupported();\n  }\n  get type() {\n    return \"dash\";\n  }\n  get canLiveSync() {\n    return true;\n  }\n  /**\n   * The `dash.js` configuration object.\n   *\n   * @see {@link https://cdn.dashjs.org/latest/jsdoc/module-Settings.html}\n   */\n  get config() {\n    return this._controller._config;\n  }\n  set config(config) {\n    this._controller._config = config;\n  }\n  /**\n   * The `dash.js` constructor (supports dynamic imports) or a URL of where it can be found.\n   *\n   * @defaultValue `https://cdn.jsdelivr.net/npm/dashjs@4.7.4/dist/dash.all.min.js`\n   */\n  get library() {\n    return this._library;\n  }\n  set library(library) {\n    this._library = library;\n  }\n  preconnect() {\n    if (!isString(this._library))\n      return;\n    preconnect(this._library);\n  }\n  setup() {\n    super.setup();\n    new DASHLibLoader(this._library, this._ctx, (ctor) => {\n      this._ctor = ctor;\n      this._controller.setup(ctor);\n      this._ctx.delegate._notify(\"provider-setup\", this);\n      const src = peek(this._ctx.$state.source);\n      if (src)\n        this.loadSource(src);\n    });\n  }\n  async loadSource(src, preload) {\n    if (!isString(src.src)) {\n      this._removeSource();\n      return;\n    }\n    this._media.preload = preload || \"\";\n    this._appendSource(src, \"application/x-mpegurl\");\n    this._controller.loadSource(src);\n    this._currentSrc = src;\n  }\n  /**\n   * The given callback is invoked when a new `dash.js` instance is created and right before it's\n   * attached to media.\n   */\n  onInstance(callback) {\n    const instance = this._controller.instance;\n    if (instance)\n      callback(instance);\n    this._controller._callbacks.add(callback);\n    return () => this._controller._callbacks.delete(callback);\n  }\n  destroy() {\n    this._controller.destroy();\n  }\n}\n\nexport { DASHProvider };\n"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../../vidstack/dev/chunks/vidstack-C9oRIXv0.js"],
  "sourcesContent": ["import { o as deferredPromise, f as signal, l as listenEvent, g as effect, p as peek, i as isString } from './vidstack-CPyWhQNM.js';\nimport { a as appendParamsToURL } from './vidstack-CwOXU-tS.js';\n\nfunction timedPromise(callback, ms = 3e3) {\n  const promise = deferredPromise();\n  setTimeout(() => {\n    const rejection = callback();\n    if (rejection)\n      promise.reject(rejection);\n  }, ms);\n  return promise;\n}\n\nclass EmbedProvider {\n  constructor(_iframe) {\n    this._iframe = _iframe;\n    this._src = signal(\"\");\n    /**\n     * Defines which referrer is sent when fetching the resource.\n     *\n     * @see {@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement/referrerPolicy}\n     */\n    this.referrerPolicy = null;\n    _iframe.setAttribute(\"frameBorder\", \"0\");\n    _iframe.setAttribute(\"aria-hidden\", \"true\");\n    _iframe.setAttribute(\n      \"allow\",\n      \"autoplay; fullscreen; encrypted-media; picture-in-picture; accelerometer; gyroscope\"\n    );\n    if (this.referrerPolicy !== null) {\n      _iframe.setAttribute(\"referrerpolicy\", this.referrerPolicy);\n    }\n  }\n  get iframe() {\n    return this._iframe;\n  }\n  setup() {\n    listenEvent(window, \"message\", this._onWindowMessage.bind(this));\n    listenEvent(this._iframe, \"load\", this._onLoad.bind(this));\n    effect(this._watchSrc.bind(this));\n  }\n  _watchSrc() {\n    const src = this._src();\n    if (!src.length) {\n      this._iframe.setAttribute(\"src\", \"\");\n      return;\n    }\n    const params = peek(() => this._buildParams());\n    this._iframe.setAttribute(\"src\", appendParamsToURL(src, params));\n  }\n  _postMessage(message, target) {\n    this._iframe.contentWindow?.postMessage(JSON.stringify(message), target ?? \"*\");\n  }\n  _onWindowMessage(event) {\n    const origin = this._getOrigin(), isOriginMatch = (event.source === null || event.source === this._iframe?.contentWindow) && (!isString(origin) || origin === event.origin);\n    if (!isOriginMatch)\n      return;\n    try {\n      const message = JSON.parse(event.data);\n      if (message)\n        this._onMessage(message, event);\n      return;\n    } catch (e) {\n    }\n    if (event.data)\n      this._onMessage(event.data, event);\n  }\n}\n\nexport { EmbedProvider as E, timedPromise as t };\n"],
  "mappings": ";;;;;;;;;;;;;AAGA,SAAS,aAAa,UAAU,KAAK,KAAK;AACxC,QAAM,UAAU,gBAAgB;AAChC,aAAW,MAAM;AACf,UAAM,YAAY,SAAS;AAC3B,QAAI;AACF,cAAQ,OAAO,SAAS;AAAA,EAC5B,GAAG,EAAE;AACL,SAAO;AACT;AAEA,IAAM,gBAAN,MAAoB;AAAA,EAClB,YAAY,SAAS;AACnB,SAAK,UAAU;AACf,SAAK,OAAO,OAAO,EAAE;AAMrB,SAAK,iBAAiB;AACtB,YAAQ,aAAa,eAAe,GAAG;AACvC,YAAQ,aAAa,eAAe,MAAM;AAC1C,YAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AACA,QAAI,KAAK,mBAAmB,MAAM;AAChC,cAAQ,aAAa,kBAAkB,KAAK,cAAc;AAAA,IAC5D;AAAA,EACF;AAAA,EACA,IAAI,SAAS;AACX,WAAO,KAAK;AAAA,EACd;AAAA,EACA,QAAQ;AACN,gBAAY,QAAQ,WAAW,KAAK,iBAAiB,KAAK,IAAI,CAAC;AAC/D,gBAAY,KAAK,SAAS,QAAQ,KAAK,QAAQ,KAAK,IAAI,CAAC;AACzD,WAAO,KAAK,UAAU,KAAK,IAAI,CAAC;AAAA,EAClC;AAAA,EACA,YAAY;AACV,UAAM,MAAM,KAAK,KAAK;AACtB,QAAI,CAAC,IAAI,QAAQ;AACf,WAAK,QAAQ,aAAa,OAAO,EAAE;AACnC;AAAA,IACF;AACA,UAAM,SAAS,KAAK,MAAM,KAAK,aAAa,CAAC;AAC7C,SAAK,QAAQ,aAAa,OAAO,kBAAkB,KAAK,MAAM,CAAC;AAAA,EACjE;AAAA,EACA,aAAa,SAAS,QAAQ;AAlDhC;AAmDI,eAAK,QAAQ,kBAAb,mBAA4B,YAAY,KAAK,UAAU,OAAO,GAAG,UAAU;AAAA,EAC7E;AAAA,EACA,iBAAiB,OAAO;AArD1B;AAsDI,UAAM,SAAS,KAAK,WAAW,GAAG,iBAAiB,MAAM,WAAW,QAAQ,MAAM,aAAW,UAAK,YAAL,mBAAc,oBAAmB,CAAC,SAAS,MAAM,KAAK,WAAW,MAAM;AACpK,QAAI,CAAC;AACH;AACF,QAAI;AACF,YAAM,UAAU,KAAK,MAAM,MAAM,IAAI;AACrC,UAAI;AACF,aAAK,WAAW,SAAS,KAAK;AAChC;AAAA,IACF,SAAS,GAAG;AAAA,IACZ;AACA,QAAI,MAAM;AACR,WAAK,WAAW,MAAM,MAAM,KAAK;AAAA,EACrC;AACF;",
  "names": []
}
